{"version":3,"sources":["script.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["$ = jQuery.noConflict();\r\n\r\n\r\n/* ============== Mobile Navigation =====================\r\n=======================================================*/\r\n\r\n// Variables\r\nconst header = document.querySelector('#header'),\r\n      nav = document.querySelector(\".header_menu\"),\r\n      navBg = document.querySelector(\".menu_toggle\"),\r\n\t    navToggle = document.querySelector(\".hamburger\"),\r\n\t    specifiedElement = document.querySelector('.site_header'),\r\n\t    breakpoint = 768,\r\n      downArrow = document.querySelector('.hero_arrow');\r\n\r\n// Opening and closing mobile navigation\r\nif (navToggle) {\r\n\tnavToggle.addEventListener(\"click\", (e) => {\r\n\t\tif (nav.className == \"active\") {\r\n    \t\tnav.classList.toggle('active');\r\n        navToggle.classList.toggle('open');\r\n\r\n  \t\t} else {\r\n   \t \t\tnav.classList.toggle('active');\r\n        navToggle.classList.toggle('open');\r\n  \t\t\t}\r\n  \t\te.preventDefault();\r\n  \t}, false);\r\n}\r\n\r\n// Adding background gradient around the hamburger menu and turning it off when sidebar opens\r\nnavBg.style.background = 'linear-gradient('\r\n     + 'rgba(90, 45, 12, .99)' + ', ' + 'rgba(144, 91, 56, .99)' \r\n     + ', ' + 'rgba(144, 91, 56, .99)' + ',' + 'rgba(90, 45, 12, .99)' + ')';\r\n\r\nnavToggle.addEventListener(\"click\", (e) => {\r\n  if(nav.className == \"header_menu active\") {\r\n      navBg.style.background = 'transparent';\r\n  } else {\r\n    navBg.style.background = 'linear-gradient('\r\n     + 'rgba(90, 45, 12, .99)' + ', ' + 'rgba(144, 91, 56, .99)' \r\n     + ', ' + 'rgba(144, 91, 56, .99)' + ',' + 'rgba(90, 45, 12, .99)' + ')';\r\n  }\r\n}, false);\r\n\r\n// Any click outside of the nav element will close the menu if it's open\r\ndocument.addEventListener('click', (e) => {\r\n\t const isClickInside = specifiedElement.contains(e.target);\r\n    if (!isClickInside && nav.className == \"header_menu active\") {\r\n    nav.classList.toggle('active');\r\n    navToggle.classList.toggle('open');\r\n    navBg.style.background = 'linear-gradient('\r\n     + 'rgba(90, 45, 12, .99)' + ', ' + 'rgba(144, 91, 56, .99)' \r\n     + ', ' + 'rgba(144, 91, 56, .99)' + ',' + 'rgba(90, 45, 12, .99)' + ')';\r\n    } \r\n});\r\n\r\n// Tablet and desktop navigation will become fixex after 50px pageYOffset\r\nwindow.addEventListener('scroll', (e) => {\r\n    if(window.pageYOffset > 50) {\r\n          header.style.position = 'fixed';\r\n          header.style.width = '100%'\r\n          header.style.zIndex = 1000;\r\n          header.style.top = 0;\r\n      } else {\r\n          header.style.position = 'static';\r\n          \r\n      }\r\n});\r\n\r\n\r\n\r\n/* ============ Scroll arrows  ========================\r\n=====================================================================*/\r\n\r\n// Sets the eventlistener to \"down_arrow\" icon with click and touchstart events\r\nif(downArrow) {\r\n  const moveUpDown = downArrow.style.animation = \"MoveUpDown 1s ease infinite\";\r\n  function smoothScrollDown() {\r\n    const scroll_to_about = document.getElementById(\"about\");\r\n    scroll_to_about.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n  }\r\n  downArrow.addEventListener(\"click\", smoothScrollDown);\r\n  downArrow.addEventListener(\"touchstart\", smoothScrollDown);\r\n\r\n  // mouseover & mouseleave, touchstart & touchleave stops moving arrow icon and sets it to move again respectively\r\n  downArrow.addEventListener('mouseover', (e) => {\r\n    downArrow.style.animation = '';\r\n    e.preventDefault();\r\n  });\r\n\r\n  downArrow.addEventListener('mouseleave', (e) => {\r\n    downArrow.style.animation = 'MoveUpDown 1s ease infinite';\r\n    e.preventDefault();\r\n  });\r\n\r\n  downArrow.addEventListener('touchstart', (e) => {\r\n    downArrow.style.animation = '';\r\n    e.preventDefault();\r\n  });\r\n\r\n  downArrow.addEventListener('touchend', (e) => {\r\n    downArrow.style.animation = 'MoveUpDown 1s ease infinite';\r\n    e.preventDefault();\r\n  });\r\n}\r\n\r\n// Sets the eventlistener to \"up_arrow\" icon with click and touchstart events\r\nconst upArrow = document.querySelector('.footer_arrow');\r\nlet hero = document.getElementsByClassName('hero');\r\n\r\nfor(let i = 0; i < hero.length; i++) {\r\n\r\n    function smoothScrollUp() {\r\n      \r\n      hero[i].scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n    }\r\n    upArrow.addEventListener(\"click\", smoothScrollUp);\r\n    upArrow.addEventListener(\"touchstart\", smoothScrollUp);\r\n\r\n}\r\n\r\n/* ============ Fluidbox Plugin for galleries  ========================\r\n=====================================================================*/\r\njQuery('.blocks-gallery-item figure a').each(function() {\r\n  jQuery(this).attr({'data-fluidbox': ''});\r\n});\r\n\r\nif(jQuery('[data-fluidbox]').length > 0 ) {\r\n  jQuery('[data-fluidbox]').fluidbox();\r\n}\r\n\r\n// Fluidbox Plugin for sidebar gallery  \r\njQuery('.gallery a').each(function() {\r\n  jQuery(this).attr({'data-fluidbox': ''});\r\n});\r\n\r\nif(jQuery('[data-fluidbox]').length > 0 ) {\r\n  jQuery('[data-fluidbox]').fluidbox();\r\n}\r\n\r\n"]}